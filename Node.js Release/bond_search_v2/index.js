/**
 * SilverFir: Investment Report üå≤ [Node.js Release]
 * https://fir.icu/
 *
 * –ú–æ–¥—É–ª—å –ø–æ–∏—Å–∫–∞ –æ–±–ª–∏–≥–∞—Ü–∏–π –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º [bond_search_v2/index.js]
 *
 * –ó–∞–ø—É—Å–∫ –ø–æ–¥ Linux: $ npm start
 * –ó–∞–ø—É—Å–∫ –ø–æ–¥ Windows: start.bat
 * –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: https://habr.com/ru/post/506720/
 *
 * Docker fork: https://github.com/supaflyster/SilverFir-Investment-Report
 *
 * @author Mikhail Shardin [–ú–∏—Ö–∞–∏–ª –®–∞—Ä–¥–∏–Ω]
 * https://www.facebook.com/mikhail.shardin/
 *
 * Last updated: 23.05.2020
 *
 */

const config = {
    YieldMore: 6, //–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    YieldLess: 40, //–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    PriceMore: 80, //–¶–µ–Ω–∞ –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    PriceLess: 101, //–¶–µ–Ω–∞ –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    DurationMore: 0, //–î—é—Ä–∞—Ü–∏—è –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    DurationLess: 26, //–î—é—Ä–∞—Ü–∏—è –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    VolumeMore: 5000, //–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –∑–∞ n –¥–Ω–µ–π, —à—Ç. –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
};

const trashConfig = {
    YieldMore: 6, //–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    YieldLess: 100, //–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    PriceMore: 60, //–¶–µ–Ω–∞ –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    PriceLess: 101, //–¶–µ–Ω–∞ –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    DurationMore: 0, //–î—é—Ä–∞—Ü–∏—è –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    DurationLess: 26, //–î—é—Ä–∞—Ü–∏—è –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    VolumeMore: 1000, //–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –∑–∞ n –¥–Ω–µ–π, —à—Ç. –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
};

bond_search_v2();

async function bond_search_v2() {
    let startTime = (new Date()).getTime(); //–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ Unix Time Stamp - Epoch Converter
    console.log("–§—É–Ω–∫—Ü–∏—è %s –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—É –≤ %s. \n", getFunctionName(), (new Date()).toLocaleString());

    global.fetch = require("node-fetch");
    global.fs = require("fs");

    await MOEXsearchBonds();

    const currTime = (new Date()).getTime();
    const duration = Math.round((currTime - startTime) / 1000 / 60 * 100) / 100; //–≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö

    console.log("\n–§—É–Ω–∫—Ü–∏—è %s –∑–∞–∫–æ–Ω—á–∏–ª–∞ —Ä–∞–±–æ—Ç—É –≤ %s.", getFunctionName(), (new Date()).toLocaleString());
    console.log("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è %s –≤ –º–∏–Ω—É—Ç–∞—Ö: %s.", getFunctionName(), duration);
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */

async function MOEXsearchBonds() { //–ø–æ–∏—Å–∫ –æ–±–ª–∏–≥–∞—Ü–∏–π –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    const { YieldMore, YieldLess, PriceMore, PriceLess, DurationMore, DurationLess, VolumeMore, } = config;

    const conditions = `
        <li>${YieldMore}% < –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å < ${YieldLess}%</li>
        <li>${PriceMore}% < –¶–µ–Ω–∞ < ${PriceLess}%</li>
        <li>${DurationMore} –º–µ—Å. < –î—é—Ä–∞—Ü–∏—è < ${DurationLess} –º–µ—Å.</li> 
        <li>–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –∑–∞ n –¥–Ω–µ–π > ${VolumeMore} —à—Ç.</li>
        <li>–ü–æ–∏—Å–∫ –≤ –¢0, –¢+, –¢+ (USD) - –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º - –±–µ–∑–∞–¥—Ä–µ—Å.</li>
    `;
    const logs = [`<li>–ü–æ–∏—Å–∫ –Ω–∞—á–∞—Ç ${new Date().toLocaleString()}.</li>`];
    const bonds = [
        // ["BondName", "SECID", "BondPrice", "BondVolume", "BondYield", "BondDuration", "BondTax"],
    ];

    await Promise.all(
        [7, 58, 193, 227].map(async t => { // https://iss.moex.com/iss/engines/stock/markets/bonds/boardgroups/
            const url = `https://iss.moex.com/iss/engines/stock/markets/bonds/boardgroups/${t}/securities.json?iss.dp=comma&iss.meta=off&iss.only=securities,marketdata&securities.columns=SECID,SECNAME,PREVLEGALCLOSEPRICE,LISTLEVEL&marketdata.columns=SECID,YIELD,DURATION,LISTLEVEL`;
            console.log('%s. –°—Å—ã–ª–∫–∞ –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π –≥—Ä—É–ø–ø—ã: %s', getFunctionName(), url);

            logs.push('<li><b>–°—Å—ã–ª–∫–∞ –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π –≥—Ä—É–ø–ø—ã: ' + url + '.</b></li>');

            try {
                const { securities: { data: securitiesData }, marketdata: { data: marketdata } } = await fetch(url).then(resp => resp.json());

                if (marketdata.length === 0) {
                    console.log('%s. –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö c –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä—É—á–Ω—É—é –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ.', getFunctionName());

                    return;
                }

                let securitiesCount = securitiesData.length;

                //console.log('%s. –í—Å–µ–≥–æ –≤ —Å–ø–∏—Å–∫–µ: %s –±—É–º–∞–≥.', getFunctionName(), securitiesCount);
                logs.push(`<li>–í—Å–µ–≥–æ –≤ —Å–ø–∏—Å–∫–µ: ${securitiesCount} –±—É–º–∞–≥.</li>`);

                for (let i = 0; i <= securitiesCount - 1; i++) {
                    const bondName = securitiesData[i][1].replace(/\"/g, '').replace(/\'/g, '');
                    const SECID = securitiesData[i][0];
                    const bondPrice = securitiesData[i][2];
                    const bondYield = marketdata[i][1];
                    const bondListLevel = securitiesData[i][3];
                    const bondDuration = Math.floor((marketdata[i][2] / 30) * 100) / 100; // –∫–æ–ª-–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –º–µ—Å—è—Ü–µ–≤

                    //console.log('%s. –†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—Ä–æ–∫–æ–π %s –∏–∑ %s: %s (%s).', getFunctionName(), (i + 1), securitiesCount, bondName, SECID);
                    logs.push('<li>–†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—Ä–æ–∫–æ–π ' + (i + 1) + ' –∏–∑ ' + securitiesCount + ': ' + SECID + ' (' + bondYield + '%, ' + bondPrice + ').</li>');

                    if (bondYield > YieldMore && bondYield < YieldLess && //—É—Å–ª–æ–≤–∏—è –≤—ã–±–æ—Ä–∫–∏
                        bondPrice > PriceMore && bondPrice < PriceLess &&
                        bondDuration > DurationMore && bondDuration < DurationLess) {

                        const bondVolume = await MOEXsearchVolume(SECID);
                        if (bondVolume > VolumeMore) { //–µ—Å–ª–∏ –æ–±–æ—Ä–æ—Ç –≤ –±—É–º–∞–≥–∞—Ö –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
                            const bondTax = await MOEXsearchTax(SECID);
                            bonds.push([bondName, SECID, bondPrice, bondVolume, bondYield, bondDuration, bondTax, bondListLevel, t === 227]);

                            console.log('%s. C—Ç—Ä–æ–∫–∞ ‚Ññ %s: %s.', getFunctionName(), bonds.length, JSON.stringify(bonds[bonds.length - 1]));
                            logs.push(`<li><b>C—Ç—Ä–æ–∫–∞ ‚Ññ ${bonds.length}: ${JSON.stringify(bonds[bonds.length - 1])}.</b></li>`);
                        }
                    }
                }
            } catch (e) {
                const message = `–û—à–∏–±–∫–∞ –≤ ${getFunctionName()}`;

                console.log(message);
                logs.push(`<li>${message}</li>`);
            }
        })
    );

    if (bonds.length === 0) {
        console.log('–í –º–∞—Å—Å–∏–≤–µ –Ω–µ—Ç —Å—Ç—Ä–æ–∫', getFunctionName());

        return;
    }

    await HTMLgenerate(bonds, conditions, logs);
}

/**
 * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 */

async function MOEXsearchTax(ID) { //–Ω–∞–ª–æ–≥–æ–≤—ã–µ –ª—å–≥–æ—Ç—ã –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π, –≤—ã–ø—É—â–µ–Ω–Ω—ã—Ö —Å 1 —è–Ω–≤–∞—Ä—è 2017 –≥–æ–¥–∞
    const url = `https://iss.moex.com/iss/securities/${ID}.json?iss.meta=off&iss.only=description`;

    console.log('%s. –°—Å—ã–ª–∫–∞ –¥–ª—è %s: %s', getFunctionName(), ID, url);

    try {
        const { description: { data } } = await fetch(url).then(resp => resp.json());

        const startDateMoex = data.find(e => e[0] === 'STARTDATEMOEX')[2];
        // DAYSTOREDEMPTION = json.description.data.find(e => e[0] === 'DAYSTOREDEMPTION')[2]; //–ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª-–≤–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π –ø–æ –ø–æ–≥–∞—à–µ–Ω–∏—è
        console.log("%s. –î–∞—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è –æ –≤–∫–ª—é—á–µ–Ω–∏–∏ —Ü–µ–Ω–Ω–æ–π –±—É–º–∞–≥–∏ –≤ –°–ø–∏—Å–æ–∫ –¥–ª—è %s: %s.", getFunctionName(), ID, startDateMoex);
        const isDateLater = new Date(startDateMoex) > new Date('2017-01-01');

        return isDateLater;
    } catch (e) {
        console.log('–û—à–∏–±–∫–∞ –≤ %s', getFunctionName())
    }
}

async function MOEXsearchVolume(ID) { //—Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–æ—Ä–æ—Ç–æ–≤ –ø–æ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –æ–±–ª–∏–≥–∞—Ü–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ n –¥–Ω–µ–π
    const now = new Date();
    const DateRequestPrevious = `${now.getFullYear()}-${now.getMonth() - 1}-${now.getDate()}`; //—ç—Ç–æ—Ç –¥–µ–Ω—å 2 –º–µ—Å—è—Ü–∞ –Ω–∞–∑–∞–¥

    const boardID = await MOEXboardID(ID);

    if (!boardID) {
        return
    }

    const url = `https://iss.moex.com/iss/history/engines/stock/markets/bonds/boards/${boardID}/securities/${ID}.json?iss.meta=off&iss.only=history&history.columns=SECID,TRADEDATE,VOLUME,NUMTRADES&limit=61&from=${DateRequestPrevious}`;

    // numtrades - –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫ —Å –±—É–º–∞–≥–æ–π
    // VOLUME - –æ–±–æ—Ä–æ—Ç –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –±—É–º–∞–≥ (–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫, —à—Ç)

    console.log('%s. –°—Å—ã–ª–∫–∞ –¥–ª—è %s: %s', getFunctionName(), ID, url);

    try {
        const { history: { data: list } } = await fetch(url).then(resp => resp.json());
        const volume_sum = list.reduce((acc, bond) => {
            return acc + bond[2];
        }, 0);

        console.log("%s. –û–±–æ—Ä–æ—Ç –≤ –±—É–º–∞–≥–∞—Ö (–æ–±—ä–µ–º —Å–¥–µ–ª–æ–∫, —à—Ç) –¥–ª—è %s –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ %s –¥–Ω–µ–π: %s —à—Ç—É–∫.", getFunctionName(), ID, list.length, volume_sum);

        return volume_sum;
    } catch (e) {
        console.log('–û—à–∏–±–∫–∞ –≤ %s', getFunctionName())
    }
}

async function MOEXboardID(ID) { //—É–∑–Ω–∞–µ–º boardid –ª—é–±–æ–π –±—É–º–∞–≥–∏ –ø–æ —Ç–∏–∫–µ—Ä—É
    const url = `https://iss.moex.com/iss/securities/${ID}.json?iss.meta=off&iss.only=boards&boards.columns=secid,boardid,is_primary`;

    try {
        const { boards: { data }} = await fetch(url).then(resp => resp.json());
        const boardID = data.find(e => e[2] === 1)[1];

        console.log("%s. boardID –¥–ª—è %s: %s", getFunctionName(), ID, boardID);
        return boardID;
    } catch (e) {
        console.log('–û—à–∏–±–∫–∞ –≤ %s', getFunctionName())
    }
}

/**
 * –û–±—â–∏–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 */

function getGoogleRowString(bonds) {
    return bonds.map(bond => {
        bond[1] = `<a href="https://smart-lab.ru/q/bonds/${bond[1]}/" target="_blank">${bond[1]}</a>`;

        return bond;
    });
}

async function HTMLgenerate(bonds, conditions, logs) { //–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ HTML https://developers.google.com/chart/interactive/docs/gallery/table?hl=ru
    const hmtl = `
    <!DOCTYPE html>
    <html lang="ru">

    <head>
        <meta charset="utf-8">
        <title>–ú–æ—Å–±–∏—Ä–∂–∞. –§–∏–ª—å—Ç—Ä –æ–±–ª–∏–≥–∞—Ü–∏–π</title>
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        <script type="text/javascript">
            google.charts.load('current', {
                'packages': ['table']
            });
            google.charts.setOnLoadCallback(drawTable);

            function drawTable() {
                const data = new google.visualization.DataTable();

                data.addColumn('string', '–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ');
                data.addColumn('string', '–ö–æ–¥ —Ü–µ–Ω–Ω–æ–π –±—É–º–∞–≥–∏');
                data.addColumn('number', '–¶–µ–Ω–∞, %');
                data.addColumn('number', '–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –∑–∞ n –¥–Ω–µ–π, —à—Ç.');
                data.addColumn('number', '–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å');
                data.addColumn('number', '–î—é—Ä–∞—Ü–∏—è, –º–µ—Å');
                data.addColumn('boolean', '–õ—å–≥–æ—Ç–∞');
                data.addColumn('number', '–£—Ä–æ–≤–µ—Ä—å –ª–∏—Å—Ç–∏–Ω–≥–∞');
                data.addColumn('boolean', '–ü–ò–†');
                data.addRows(
                    ${JSON.stringify(getGoogleRowString(bonds))}
                );
                const table = new google.visualization.Table(document.getElementById('table_div'));
                
                table.draw(data, {
                    showRowNumber: true,
                    width: '100%',
                    height: '100%',
                    sortColumn: 4,
                    sortAscending: false,
                    allowHtml: true
                });
            }
        </script>
    </head>

    <body>
        <noscript>
            ${makeTableHTML(bonds)}
            <small>(JavaScript –≤ —ç—Ç–æ–º –±—Ä–∞—É–∑–µ—Ä–µ –æ—Ç–∫–ª—é—á—ë–Ω, –ø–æ—ç—Ç–æ–º—É —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è)</small>
        </noscript>
        <div id="table_div"></div>
        <p>–í—ã–±–æ—Ä–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ ${new Date().toLocaleString()} –ø–æ —É—Å–ª–æ–≤–∏—è–º üìú:
        <ul>
            ${conditions}
        </ul>
        <details>
            <summary>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</summary><small>
                <ol>
                    ${logs.join('\n')}
                </ol>
            </small>
        </details>
    </body>

    </html>`;

    fs.writeFileSync(`./bonds/bond_search_${new Date().toLocaleString().replace(/[\:\s]/g, '-')}.html`, hmtl)

}

function makeTableHTML(bonds) { //–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º html —Ç–∞–±–ª–∏—Ü—É –∏–∑ –º–∞—Å—Å–∏–≤–∞
    let result = `<table style="text-align: center; border: 1px solid green; border-collapse: collapse; border-style: hidden;">
        <tr>
            <td>–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</td>
            <td>–ö–æ–¥ —Ü–µ–Ω–Ω–æ–π –±—É–º–∞–≥–∏</td>
            <td>–¶–µ–Ω–∞, %</td>
            <td>–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –∑–∞ n –¥–Ω–µ–π, —à—Ç.</td>
            <td>–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å</td>
            <td>–î—é—Ä–∞—Ü–∏—è, –º–µ—Å</td>
            <td>–õ—å–≥–æ—Ç–∞</td>
            <td>–£—Ä–æ–≤–µ—Ä—å –ª–∏—Å—Ç–∏–Ω–≥–∞</td>
            <td>–ü–ò–†</td>
        </tr>`;

    result += bonds.map(bond => {
        return [
            '<tr>',
            bond.map((bondVal, index) => {
                return [
                    '<td style="border: 1px solid green;">',
                    index === 1 ? `<a href="https://smart-lab.ru/q/bonds/${bondVal}/">${bondVal}</a>` : bondVal,
                    '</td>'
                ].join('')
            }).join(''),
            '</tr>'
        ].join('');
    }).join('');

    result += "</table>";

    return result;
}

function getFunctionName() { //–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏
    return (new Error()).stack.split('\n')[2].split(' ')[5];
}
